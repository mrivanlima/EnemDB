CREATE TABLE IF NOT EXISTS app.seats (
    seats_id                     SERIAL,
    year_id                     INTEGER,
    university_id               INTEGER,
    academic_organization_id    INTEGER,
    university_category_id      INTEGER,
    university_campus_id        INTEGER,
    state_id                    INTEGER,
    city_id                     INTEGER,
    region_id                   INTEGER,
    degree_id                   INTEGER,
    degree_level_id             INTEGER,
    shift_id                    INTEGER,
    frequency_id                INTEGER,
    quota_type_id               INTEGER,
    special_quota_id            INTEGER,
    edition                     TEXT,
    score_bonus_percent         NUMERIC(5,2) NULL,
    seats_offered               INTEGER NULL,   
    cutoff_score                NUMERIC(6,2) NULL, 
    num_applicants              INTEGER NULL,
    seats_authorized            INTEGER,
    weight_essay                NUMERIC(5,2),
    min_score_essay             NUMERIC(5,2),
    weight_language             NUMERIC(5,2),
    min_score_language          NUMERIC(5,2),
    weight_math                 NUMERIC(5,2),
    min_score_math              NUMERIC(5,2),
    weight_humanities           NUMERIC(5,2),
    min_score_humanities        NUMERIC(5,2),
    weight_sciences             NUMERIC(5,2),
    min_score_sciences          NUMERIC(5,2),
    min_avg_score_enem          NUMERIC(5,2),
    pct_state_ppi_ibge          NUMERIC(5,2),
    pct_state_pp_ibge           NUMERIC(5,2),
    pct_state_indigenous_ibge   NUMERIC(5,2),
    pct_state_quilombola_ibge   NUMERIC(5,2),
    pct_state_pcd_ibge          NUMERIC(5,2),
    pct_quota_law               NUMERIC(5,2),
    pct_quota_ppi               NUMERIC(5,2),
    pct_quota_pp                NUMERIC(5,2),
    pct_quota_indigenous        NUMERIC(5,2),
    pct_quota_quilombola        NUMERIC(5,2),
    pct_quota_pcd               NUMERIC(5,2),
    created_by                  INTEGER,
    created_on                  TIMESTAMPTZ DEFAULT NOW(),
    modified_by                 INTEGER,
    modified_on                 TIMESTAMPTZ,

    CONSTRAINT pk_seats PRIMARY KEY (seats_id),
    CONSTRAINT fk_seats_year FOREIGN KEY (year_id) REFERENCES app.year(year_id),
    CONSTRAINT fk_seats_university FOREIGN KEY (university_id) REFERENCES app.university(university_id),
    CONSTRAINT fk_seats_academic_organization FOREIGN KEY (academic_organization_id) REFERENCES app.academic_organization(academic_organization_id),
    CONSTRAINT fk_seats_university_category FOREIGN KEY (university_category_id) REFERENCES app.university_category(university_category_id),
    CONSTRAINT fk_seats_university_campus FOREIGN KEY (university_campus_id) REFERENCES app.university_campus(university_campus_id),
    CONSTRAINT fk_seats_state FOREIGN KEY (state_id) REFERENCES app.state(state_id),
    CONSTRAINT fk_seats_city FOREIGN KEY (city_id) REFERENCES app.city(city_id),
    CONSTRAINT fk_seats_region FOREIGN KEY (region_id) REFERENCES app.region(region_id),
    CONSTRAINT fk_seats_degree FOREIGN KEY (degree_id) REFERENCES app.degree(degree_id),
    CONSTRAINT fk_seats_degree_level FOREIGN KEY (degree_level_id) REFERENCES app.degree_level(degree_level_id),
    CONSTRAINT fk_seats_shift FOREIGN KEY (shift_id) REFERENCES app.shift(shift_id),
    CONSTRAINT fk_seats_frequency FOREIGN KEY (frequency_id) REFERENCES app.frequency(frequency_id),
    CONSTRAINT fk_seats_quota_type FOREIGN KEY (quota_type_id) REFERENCES app.quota_type(quota_type_id),
    CONSTRAINT fk_seats_special_quota FOREIGN KEY (special_quota_id) REFERENCES app.special_quota(special_quota_id),
    CONSTRAINT fk_seats_created_by FOREIGN KEY (created_by) REFERENCES app.user_login(user_login_id),
    CONSTRAINT fk_seats_modified_by FOREIGN KEY (modified_by) REFERENCES app.user_login(user_login_id)
);

